dataPX <- read.csv("~/Documents/thesis/historicalData_PX.csv", sep=";")
View(dataPX)
install.packages("tweenr")
library("tweenr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
data <- data.frame(
x = rnorm(100),
y = rnorm(100),
time = sample(50, 100, replace = TRUE)
)
data <- tween_appear(data, 'time', nframes = 200)
View(data)
View(data)
View(dataPX)
View(data)
consumption <- read.csv("~/Documents/thesis/consumption.csv", sep=";")
View(consumption)
timeseries <- ggplot(data=dataPX, aes(x=datum, y=cena)) +
geom_line() +
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Adam")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[1])+
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Anežka")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[2])+
geom_smooth(aes(group = 1),method = "lm", se = FALSE, colour ="black",linetype="dotted")+
theme_hc() +
scale_color_manual(values = wes_palette("Darjeeling"))+
theme(legend.position="top")+
labs(x = "Datum", y = "Cena") +
scale_x_date(labels = date_format("%m-%Y"))
ggplotly(timeseries)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("ggthemes", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("plotly", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
timeseries <- ggplot(data=dataPX, aes(x=datum, y=cena)) +
geom_line() +
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Adam")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[1])+
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Anežka")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[2])+
geom_smooth(aes(group = 1),method = "lm", se = FALSE, colour ="black",linetype="dotted")+
theme_hc() +
scale_color_manual(values = wes_palette("Darjeeling"))+
theme(legend.position="top")+
labs(x = "Datum", y = "Cena") +
scale_x_date(labels = date_format("%m-%Y"))
ggplotly(timeseries)
timeseries <- ggplot(data=dataPX, aes(x=datum, y=cena)) +
geom_line() +
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Adam")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[1])+
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Anežka")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[2])+
geom_smooth(aes(group = 1),method = "lm", se = FALSE, colour ="black",linetype="dotted")+
theme_hc() +
scale_color_manual(values = wes_palette("Darjeeling"))+
theme(legend.position="top")+
labs(x = "Datum", y = "Cena") +
#scale_x_date(labels = date_format("%m-%Y"))
ggplotly(timeseries)
dataP <- dataPX[,c(1,3)]
colnames(dataP) <-c("datum", "cena")
dataP$datum <-as.Date(dataP$datum, "%d.%m.%Y")
dataP$cena <- sub(",",".",dataP$cena)
dataP$cena <- as.numeric(dataP$cena)
min(dataP[,2])
timeseries <- ggplot(data=dataP, aes(x=datum, y=cena)) +
geom_line() +
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Adam")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[1])+
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Anežka")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[2])+
geom_smooth(aes(group = 1),method = "lm", se = FALSE, colour ="black",linetype="dotted")+
theme_hc() +
scale_color_manual(values = wes_palette("Darjeeling"))+
theme(legend.position="top")+
labs(x = "Datum", y = "Cena") +
#scale_x_date(labels = date_format("%m-%Y"))
ggplotly(timeseries)
View(dataP)
timeseries <- ggplot(data=dataP, aes(x=datum, y=cena)) +
geom_line() +
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Adam")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[1])+
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Anežka")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[2])+
geom_smooth(aes(group = 1),method = "lm", se = FALSE, colour ="black",linetype="dotted")+
theme_hc() +
scale_color_manual(values = wes_palette("Darjeeling"))+
theme(legend.position="top")+
labs(x = "Datum", y = "Cena") +
scale_x_date(labels = date_format("%m-%Y"))
ggplotly(timeseries)
timeseries <- ggplot(data=dataP, aes(x=datum, y=cena)) +
geom_line() +
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Adam")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[1])+
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Anežka")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[2])+
geom_smooth(aes(group = 1),method = "lm", se = FALSE, colour ="black",linetype="dotted")+
theme_hc() +
scale_color_manual(values = wes_palette("Darjeeling"))+
theme(legend.position="top")+
labs(x = "Datum", y = "Cena") +
scale_x_date(labels = date_format("%Y-%m-%d"))
ggplotly(timeseries)
timeseries <- ggplot(data=dataP, aes(x=datum, y=cena)) +
geom_line() +
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Adam")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[1])+
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Anežka")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[2])+
geom_smooth(aes(group = 1),method = "lm", se = FALSE, colour ="black",linetype="dotted")+
theme_hc() +
scale_color_manual(values = wes_palette("Darjeeling"))+
theme(legend.position="top")+
labs(x = "Datum", y = "Cena")
#scale_x_date(labels = date_format("%Y-%m-%d"))
ggplotly(timeseries)
consumption$date <- paste(consumption$rok,"/",substr(consumption$q,2,2), sep="")
install.packages("zoo")
library("zoo", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
consumption$date <-as.yearqtr(consumption$date, "%Y/%Q")
consumption$date <- paste(consumption$rok,"/",consumption$q, sep="")
consumption$date <-as.yearqtr(consumption$date, "%Y/%q")
consumption$date <- paste(consumption$rok,"/",consumption$q, sep="")
x <- as.yearqtr(2000 + seq(0, 7)/4)
x
consumption$date <- paste(consumption$rok," ",consumption$q, sep="")
consumption$date <-as.yearqtr(consumption$date, "%Y %q")
x <- 2000 + seq(0, 7)/4
x
consumption$date <- paste(consumption$rok,"-",substr(consumption$q,2,2), sep="")
consumption$date <-as.yearqtr(consumption$date)
timeseries2 <- ggplot(data=consumption, aes(x=date, y=consumption)) +
geom_line() +
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Adam")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[1])+
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Anežka")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[2])+
geom_smooth(aes(group = 1),method = "lm", se = FALSE, colour ="black",linetype="dotted")+
theme_hc() +
scale_color_manual(values = wes_palette("Darjeeling"))+
theme(legend.position="top")+
labs(x = "Datum", y = "Cena")
#scale_x_date(labels = date_format("%Y-%m-%d"))
ggplotly(timeseries2)
timeseries2 <- ggplot(data=consumption, aes(x=date, y=consumption)) +
geom_line() +
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Adam")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[1])+
#geom_abline(intercept= mean(fin$cena[which(fin$kdo=="Anežka")]),slope=0, lwd=1,linetype="dashed",color=wes_palette("Darjeeling")[2])+
#geom_smooth(aes(group = 1),method = "lm", se = FALSE, colour ="black",linetype="dotted")+
theme_hc() +
scale_color_manual(values = wes_palette("Darjeeling"))+
theme(legend.position="top")+
labs(x = "Datum", y = "Cena")
#scale_x_date(labels = date_format("%Y-%m-%d"))
ggplotly(timeseries2)
spotreba_bezne_ceny <- read.csv("~/Documents/thesis/spotreba_bezne_ceny.csv", sep=";")
View(spotreba_bezne_ceny)
spotreba_stale_ceny <- read.csv("~/Documents/thesis/spotreba_stale_ceny.csv", sep=";")
View(spotreba_stale_ceny)
spotreba_stale_ceny <- complete.cases(spotreba_stale_ceny)
spotreba_stale_ceny <- read.csv("~/Documents/thesis/spotreba_stale_ceny.csv", sep=";")
View(spotreba_stale_ceny)
spotreba_stale_ceny <- na.omit(spotreba_stale_ceny)
View(spotreba_bezne_ceny)
View(spotreba_stale_ceny)
spotreba_stale_ceny$deflator <- spotreba_stale_ceny$cons_adj/spotreba_bezne_ceny$cons_un
spotreba_bezne_ceny <- spotreba_bezne_ceny[1:83,]
spotreba_bezne_ceny <- spotreba_bezne_ceny[1:82,]
spotreba_stale_ceny$deflator <- spotreba_stale_ceny$cons_adj/spotreba_bezne_ceny$cons_un
finance <- gs_title("Finance 2016")
fin <- gs_read(ss = finance, ws = "finance", range=cell_cols("A:D"))
#fin <- as.data.frame(fin[,c(1:4)])
fin <- fin[complete.cases(fin),]
# transform data
fin$datum <- strptime(fin$datum, "%d.%m.")
fin$datum <- as.Date(fin$datum)
fin$cena <- as.numeric(fin$cena)
fin$kdo <- factor(fin$kdo, levels=c("Adam", "Anežka"))
avg <- mean(fin$cena)
fin$month=month(fin$datum)
fin <- fin[order(fin$datum),]
fin
finance <- gs_title("Finance 2016")
finance <- gs_title("Finance 2016")
fin <- gs_read(ss = finance, ws = "finance", range=cell_cols("A:D"))
#fin <- as.data.frame(fin[,c(1:4)])
fin <- fin[complete.cases(fin),]
# transform data
fin$datum <- strptime(fin$datum, "%d.%m.")
fin$datum <- as.Date(fin$datum)
fin$cena <- as.numeric(fin$cena)
fin$kdo <- factor(fin$kdo, levels=c("Adam", "Anežka"))
avg <- mean(fin$cena)
fin$month=month(fin$datum)
fin <- fin[order(fin$datum),]
fin
library(shiny)
library(googlesheets)
library(lubridate)
library(ggplot2)
library(ggthemes)
library(scales)
library(wesanderson)
library(plotly)
library(cellranger)
library(shinyjs)
gs_ls("Finance 2016",verbose=FALSE)
finance <- gs_title("Finance 2016")
fin <- gs_read(ss = finance, ws = "finance", range=cell_cols("A:D"))
#fin <- as.data.frame(fin[,c(1:4)])
fin <- fin[complete.cases(fin),]
# transform data
fin$datum <- strptime(fin$datum, "%d.%m.")
fin$datum <- as.Date(fin$datum)
fin$cena <- as.numeric(fin$cena)
fin$kdo <- factor(fin$kdo, levels=c("Adam", "Anežka"))
avg <- mean(fin$cena)
fin$month=month(fin$datum)
fin <- fin[order(fin$datum),]
fin
aggregate(fin)
View(fin)
aggregate(fin, FUN = sum, by="datum")
aggregate(fin, FUN = sum, by=list("datum"))
aggregate(fin, FUN = sum, by=list(fin$datum))
aggregate(fin, FUN = sum, by=list(Group.date=fin$datum))
aggregate(x = fin["cena"], FUN = sum, by=list(Group.date=fin$datum))
aggregate(x = fin[c("cena","kdo")], FUN = sum, by=list(datum=fin$datum, kdo=fin$kdo))
aggregate(x = fin["cena"], FUN = sum, by=list(datum=fin$datum, kdo=fin$kdo))
fin2 < - aggregate(x = fin["cena"], FUN = sum, by=list(datum=fin$datum, kdo=fin$kdo))
fin2[order(-fin2[,1]),]
fin2 < - aggregate(x = fin["cena"], FUN = sum, by=list(datum=fin$datum, kdo=fin$kdo))
fin2 < - as.data.frame(aggregate(x = fin["cena"], FUN = sum, by=list(datum=fin$datum, kdo=fin$kdo)))
fin2[order(-fin2[,1]),]
fin2[order(-fin2[,1]),]
fin2 < - as.data.frame(aggregate(x = fin["cena"], FUN = sum, by=list(datum=fin$datum, kdo=fin$kdo)))
fin2 < - aggregate(x = fin["cena"], FUN = sum, by=list(datum=fin$datum, kdo=fin$kdo))
fin
fin2 < - as.data.frame(aggregate(x = fin["cena"], FUN = sum, by=list(datum=fin$datum, kdo=fin$kdo)))
aggregate(x = fin["cena"], FUN = sum, by=list(datum=fin$datum, kdo=fin$kdo))
fi <- aggregate(x = fin["cena"], FUN = sum, by=list(datum=fin$datum, kdo=fin$kdo))
fi[order(-fi[,1]),]
fi[order(fi[,1]),]
print(source('~/Documents/finance_app.R')$value)
print(source('~/Documents/finance_app.R')$value)
shinyjs:::colourPickerAddin()
devtools::install_github("rstudio/addinexamples", type = "source")
install.packages("devtools")
library(devtools)
devtools::install_github("rstudio/addinexamples", type = "source")
addinexamples:::reformatAddin()
if (!requireNamespace("devtools", quietly = TRUE))
install.packages("devtools")
devtools::install_github("rstudio/htmltools")
devtools::install_github("rstudio/shiny")
devtools::install_github("rstudio/miniUI")
devtools::install_github("rstudio/addinexamples")
addinexamples:::reformatAddin()
addinexamples:::reformatAddin()
addinexamples:::subsetAddin()
install.packages("knitr")
library(knitr)
install.packages("knitr")
install.packages(c("cluster", "codetools", "colorspace", "curl", "foreign", "mgcv", "stringi", "tweenr"))
movie_metadata <- read.csv("~/Downloads/movie_metadata.csv")
View(movie_metadata)
summary(movie_metadata)
colnames(movie_metadata)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
